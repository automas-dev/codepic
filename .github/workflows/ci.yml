name: ci

on:
  push:

jobs:
  lint_test:
    name: Lint & Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: twh2898/reusable-workflows/setup_python@main
        with:
          python-version: "3.12"
          poetry-version: "1.8.5"

      - name: Install Dependencies
        run: poetry install

      - name: Lint
        run: poetry run ruff check .

      # - name: Test
      #   run: poetry run pytest tests --cov=src --cov-branch --cov-fail-under=100

  build_release:
    name: Build Release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'NO RELEASE')

    needs: lint_test

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Increment Version
        uses: twh2898/reusable-workflows/increment_version@main
        id: version

      - name: Setup Python
        uses: twh2898/reusable-workflows/setup_python@main
        with:
          python-version: "3.12"
          poetry-version: "1.8.5"

      - name: Install Dependencies
        run: poetry install

      - name: Set version
        env:
          VERSION: ${{ steps.version.outputs.version }}
        run: |
          poetry version $VERSION

      - name: Build Release
        run: |
          poetry build

      - name: Create Release
        uses: ncipollo/release-action@v1.14.0
        with:
          artifacts: "dist/*.whl"
          makeLatest: true
          generateReleaseNotes: true
          tag: ${{ steps.version.outputs.version }}

      # - name: Publish Package
      #   env:
      #     PYPI_TOKEN: ${{ secrets.PYPI_KEY }}
      #   run: |
      #     poetry config pypi-token.pypi $PYPI_TOKEN
      #     poetry publish
